// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mnRelations.Data;

namespace mnRelations.Migrations
{
    [DbContext(typeof(MusicDBContext))]
    [Migration("20180513132021_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mnRelations.Models.Playlist", b =>
                {
                    b.Property<int>("PlaylistID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PlaylistImage");

                    b.Property<string>("PlaylistName");

                    b.HasKey("PlaylistID");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("mnRelations.Models.Song", b =>
                {
                    b.Property<int>("SongID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Duration");

                    b.Property<string>("FunFact");

                    b.Property<string>("NameOfArtist");

                    b.Property<string>("NameOfSong");

                    b.Property<string>("PictureURL");

                    b.Property<string>("SongURL");

                    b.HasKey("SongID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("mnRelations.Models.SongPlaylist", b =>
                {
                    b.Property<int>("SongID");

                    b.Property<int>("PlaylistID");

                    b.HasKey("SongID", "PlaylistID");

                    b.HasIndex("PlaylistID");

                    b.ToTable("SongPlaylist");
                });

            modelBuilder.Entity("mnRelations.Models.SongPlaylist", b =>
                {
                    b.HasOne("mnRelations.Models.Playlist", "Playlist")
                        .WithMany("SongPlaylists")
                        .HasForeignKey("PlaylistID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mnRelations.Models.Song", "Song")
                        .WithMany("SongPlaylists")
                        .HasForeignKey("SongID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
